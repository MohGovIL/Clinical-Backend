<?php

namespace GenericTools\Controller;

use GenericTools\Controller\BaseController;
use GenericTools\Model\Facility;
use Interop\Container\ContainerInterface;

require_once($GLOBALS['srcdir'] . "/patient.inc");

/**
 * Description of GenericToolsController
 *
 */
class GenericToolsController extends BaseController{

    /**
     * return JS object with list in structure {option_id:value}
     * @param - url param - list id
     * @return ajax output
     **/

    public function __construct(ContainerInterface $container)
    {  parent::__construct($container);
        $this->container = $container;
    }

    /**
     * @return \Laminas\Stdlib\ResponseInterface
     */
    public function getListAjaxAction()
    {
        $listId = $this->params()->fromRoute('param');
        //option to select only where notes equals to query string parameter
        $notes = $this->params()->fromQuery('notes');

        //option to sort alpha beta
        $sortAlphaBeta = $this->params()->fromQuery('alphaBeta');



        $results = $this->getListsTable()->getListForViewForm($listId, !is_null($sortAlphaBeta) ? $sortAlphaBeta : true, !is_null($notes) ? array('notes' => $notes) : array());
        return $this->ajaxOutPut($results);
    }

    /**
     * @return \Laminas\Stdlib\ResponseInterface
     */
    public function getListFacilityAjaxAction()
    {
        $results = $this->getFacilityTable()->getListForViewForm(true);
        return $this->ajaxOutPut($results);
    }

    static public function getCurrentFacility($onlyId = false, $onlyName = false)
    {

        if ($GLOBALS['login_into_facility']) {
            $facility = getFacility();
        } else {
           // get default of user
           $facility = getFacility(-1);
        }
        if ($onlyId) {
            return $facility['id'];
        }
        if ($onlyName) {
            return  $facility['name'];
        }
        $facilityObject = new Facility();
        $facilityObject->exchangeArray($facility);
        return $facilityObject;
    }

    protected function getPatientsTable()
    {
        return parent::getPatientsTable(); // TODO: Change the autogenerated stub
    }

}
